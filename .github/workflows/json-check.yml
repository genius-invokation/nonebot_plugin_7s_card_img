name: JSON Format Check

on:
  push:
    branches: 
      - main  # 只监听 main 分支的推送
    paths: 
      - 'map/NameMap.json'  # 只在该 JSON 文件变更时触发

jobs:
  validate-json:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整历史记录

      - name: Identify Changed JSON
        id: changes
        run: |
          # 检查是否修改了目标文件
          git diff --name-only HEAD^ HEAD -- 'map/NameMap.json' | grep . && echo "changed=true" >> $GITHUB_OUTPUT

      - name: Validate JSON
        if: steps.changes.outputs.changed == 'true'
        run: |
          # 安装 jq 工具
          sudo apt-get install -y jq

          echo "正在验证 JSON 格式..."
          if ! jq empty map/NameMap.json; then
            echo "::error::JSON 格式错误！请修复后重新提交"
            exit 1
          else
            echo "✓ JSON 格式验证通过"
          fi

      # 扩展：自动格式化并创建修复 PR (可选)
      - name: Auto Fix and Create PR
        if: failure() && steps.changes.outputs.changed == 'true'
        run: |
          echo "尝试自动修复格式问题..."
          sudo apt-get install -y jq
          jq . map/NameMap.json > fixed.json && mv fixed.json map/NameMap.json
          
          git config user.name "github-actions"
          git config user.email "actions@users.noreply.github.com"
          git add map/NameMap.json
          git commit -m "style: 自动修复 JSON 格式"
          git push origin HEAD:fix/json-format-${{ github.run_id }}
          
          gh pr create \
            --title "修复 JSON 格式问题" \
            --body "自动修复 ${{ github.sha }} 提交中的 JSON 格式问题" \
            --base main \
            --head fix/json-format-${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
